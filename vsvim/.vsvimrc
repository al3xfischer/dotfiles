:set clipboard=unnamed
let g:mapleader=' '
nmap <leader>s :w<CR>
nmap qq :bd!<CR>
nmap L $
nmap H ^
imap jj <C-c>
:set ignorecase
:set smartcase
nnoremap <leader>d "_d
xnoremap <leader>d "_d
xnoremap <leader>p "_dP
map <Space>lf :vsc Edit.FormatDocument<CR>
map <Space>ld :vsc Debug.Start<CR>
map <Space>le :vsc View.NextError<CR>
map <Space>lE :vsc View.PreviousError<CR>
nmap <leader>lc :vsc refactor.Rename<CR>

map <Space>tt :vsc ReSharper.ReSharper_UnitTestRunFromContext<CR>
map <Space>td :vsc ReSharper.ReSharper_UnitTestDebugContext<CR>
map <Space>ts :vsc ReSharper.ReSharper_UnitTestRunSolution<CR>

map <Space>f :vsc View.SolutionExplorer<CR>
map <Space>n :vsc File.NewFile<CR>
map <c-j> :vsc Edit.LineDown<CR>
map <c-k> :vsc Edit.LineUp<CR>
nmap <Space>hl gS:vsc Tools.InvokePeasyMotionJumpToLineBegining<CR>
nmap <Space>hw gS:vsc Tools.InvokePeasyMotion<CR>
nmap <Tab> :tabnext<CR>
nmap <S-Tab> :tabprev<CR>
nmap qq :vsc File.Close<CR>

nmap <leader>st :vsc View.Terminal<CR>
nmap <leader>sf :vsc View.SolutionExplorer<CR>
nmap <leader>ss :vsc View.Output<CR>
nmap <leader>sn :vsc Project.ManageNuGetPackages<CR>
nmap <leader>se :vsc View.ErrorList<CR>

nmap <leader>gt :vsc ReSharper.ReSharper_GotoText<CR>
nmap <leader>gc :vsc ReSharper.ReSharper_GotoType<CR>
nmap <leader>gf :vsc ReSharper.ReSharper_GotoFile<CR>
nmap <leader>ga :vsc View.QuickActions<CR>

nmap <leader>am ggVG
nmap <leader>af :vsc Project.AddNewItem<CR>
nmap <leader>ap :vsc File.NewProject<CR>

nmap gd :vsc Edit.GoToDefinition<CR>
nmap gD :vsc Edit.GoToDeclaration<CR>
nmap gh :vsc Edit.QuickInfo<CR>
nmap gi :vsc Edit.GoToImplementation<CR>
vmap == :vsc Edit.ToggleLineComment<CR>
nmap == :vsc Edit.ToggleLineComment<CR>
set number relativenumber
nmap <Space

nmap <Space>vrc :e ~\.vsvimrc<CR>
nmap <Space>vrr :source ~\.vsvimrc<CR>
